{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","c","type","value","onChange","target","GifGridItem","img","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","console","log","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAG3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACuB,KAAtBJ,EAAWK,SACVP,GAAc,SAAAQ,GAAC,OAAMN,GAAN,mBAAqBM,OACpCL,EAAc,MAMd,SACI,uBACIM,KAAK,OACLC,MAAUR,EACVS,SAlBU,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,eCRlBG,EAAc,SAAC,GAAe,IAAZC,EAAW,EAAXA,IAErBC,EAAQD,EAAIC,MACZC,EAAMF,EAAIE,IAKhB,OACI,gCACI,qBAAKC,IAAMD,EAAME,IAAMH,IACvB,4BAAKA,Q,uBCZJI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETL,EAFS,iDAEwCM,UAAUF,GAFlD,8DAGIG,MAAM,GAAD,OAAKP,IAHd,cAGTQ,EAHS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAd,GAAQ,IAAD,EAC1B,MAAO,CACHe,GAAIf,EAAIe,GACRd,MAAOD,EAAIC,MACXC,IAAG,UAAEF,EAAIgB,cAAN,aAAE,EAAYC,iBAAiBf,QAI1CgB,QAAQC,IAAIN,GAfG,kBAiBRA,GAjBQ,4CAAH,sDCKL,SAASO,EAAT,GAAkC,IAAdd,EAAa,EAAbA,SAK/B,ECNwB,SAAEA,GAE1B,MAA0BnB,mBAAS,CAC/ByB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAU,WACFnB,EAAQC,GACHmB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAQ,SAGzB,CAAEf,IAKEgB,EDf2BK,CAAcrB,GAAlCU,EAAd,EAAQJ,KAAcS,EAAtB,EAAsBA,QAWtB,OACI,qCACI,6BAAMf,IAEJe,GAAW,wCAEb,6BAEIL,EAAOF,KAAK,SAACd,GAAD,OACR,cAAC,EAAD,CAGKA,IAAQA,GAFDA,EAAIe,YE5BrB,SAASa,IAGpB,MAAoCzC,mBAAS,IAA7C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGA,OADAgC,QAAQC,IAAIU,GAER,qCACE,8CACA,cAAC,EAAD,CAAa3C,cAAgBA,IAE7B,uBAEA,6BAEE2C,EAAWf,KAAK,SAACR,EAASwB,GAAV,OAEA,aADA,CACCV,EAAD,CAEId,SAAaA,GADPwB,W,MChBtCC,IAASC,OACL,cAACJ,EAAD,IACFK,SAASC,eAAe,W","file":"static/js/main.2150b962.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport pt from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim() !== \"\"){\r\n            setCategories(c => [ inputValue, ...c ]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\" \r\n                    value = { inputValue }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                {/* <button >Agregar</button> */}\r\n          </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: pt.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { img } ) => {\r\n\r\n    const title = img.title;\r\n    const url = img.url;\r\n    //console.log({...img});\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p> \r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=2&api_key=l2jskVVvaxZExQNCnyaXQ1eU3UasbhOg`;\r\n        const resp = await fetch(`${ url }`);\r\n        //resp.ok\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        console.log(gifs);\r\n        //setImages(gifs);\r\n        return gifs;\r\n\r\n    }","// import React, { useEffect, useState } from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport default function GifGrid( { category } ) {\r\n\r\n\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data: images, loading } = useFetchGifs( category );\r\n    \r\n    \r\n    // useEffect(() => {\r\n    //         getGifs(category)\r\n    //             .then(imgs => setImages( imgs))\r\n    // }, [ category ])\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>LOADING</p> }\r\n\r\n            <ol>\r\n            {\r\n                images.map( (img)  => (\r\n                    <GifGridItem \r\n                        key = { img.id } \r\n                        //{...img}\r\n                         img = { img }\r\n                    />\r\n                ))\r\n\r\n            }\r\n                \r\n            </ol> \r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n            getGifs(category)\r\n                .then(imgs => {                     \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading:false\r\n                    });\r\n                })\r\n    }, [ category ])\r\n\r\n\r\n\r\n\r\n    return state; // { data: [], loading: true };\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\n\r\nexport default function GifExpertApp() {\r\n\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    console.log(categories);\r\n    return (\r\n        <>\r\n          <h1>GifExpertApp</h1>  \r\n          <AddCategory setCategories={ setCategories } />\r\n\r\n          <hr/>\r\n          \r\n          <ol>\r\n          { \r\n            categories.map( (category,i) => (\r\n                            //<li key={ i } > { category } </li>\r\n                            <GifGrid \r\n                                key={ i } \r\n                                category = { category } />\r\n            )) \r\n          }\r\n          </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n  \n);\n"],"sourceRoot":""}